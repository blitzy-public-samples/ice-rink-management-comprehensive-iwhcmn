{
  "dashboard": {
    "id": null,
    "uid": "ice_rink_system_overview",
    "title": "Ice Rink Management System Overview",
    "tags": ["ice-rink", "monitoring", "overview"],
    "timezone": "browser",
    "schemaVersion": 16,
    "version": 1,
    "refresh": "5s"
  },
  "panels": [
    {
      "title": "API Request Rate",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(http_requests_total{job=\"api\"}[5m])) by (status_code)",
          "legendFormat": "{{status_code}}"
        }
      ]
    },
    {
      "title": "Backend Service Health",
      "type": "stat",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "up{job=\"backend\"}"
        }
      ]
    },
    {
      "title": "Database Queries",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "rate(pg_stat_database_xact_commit{job=\"postgres\"}[5m])",
          "legendFormat": "Commits"
        },
        {
          "expr": "rate(pg_stat_database_xact_rollback{job=\"postgres\"}[5m])",
          "legendFormat": "Rollbacks"
        }
      ]
    },
    {
      "title": "Redis Operations",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(redis_commands_total{job=\"redis\"}[5m])) by (cmd)",
          "legendFormat": "{{cmd}}"
        }
      ]
    },
    {
      "title": "Node Resource Usage",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "100 - (avg by(instance) (rate(node_cpu_seconds_total{job=\"node-exporter\",mode=\"idle\"}[5m])) * 100)",
          "legendFormat": "CPU Usage %"
        },
        {
          "expr": "100 * (1 - ((node_memory_MemAvailable_bytes{job=\"node-exporter\"} or node_memory_Buffers_bytes{job=\"node-exporter\"} + node_memory_Cached_bytes{job=\"node-exporter\"} + node_memory_MemFree_bytes{job=\"node-exporter\"}) / node_memory_MemTotal_bytes{job=\"node-exporter\"}))",
          "legendFormat": "Memory Usage %"
        }
      ]
    },
    {
      "title": "Container Resource Usage",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [
        {
          "expr": "sum(rate(container_cpu_usage_seconds_total{job=\"cadvisor\"}[5m])) by (name)",
          "legendFormat": "{{name}} CPU Usage"
        },
        {
          "expr": "sum(container_memory_usage_bytes{job=\"cadvisor\"}) by (name)",
          "legendFormat": "{{name}} Memory Usage"
        }
      ]
    }
  ],
  "templating": {
    "list": [
      {
        "name": "job",
        "type": "query",
        "datasource": "Prometheus",
        "query": "label_values(job)",
        "refresh": 1,
        "regex": "",
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "__comments": [
    "Human Tasks:",
    "1. Review and adjust dashboard panels based on specific monitoring requirements (Required)",
    "2. Set up alerting rules in Grafana based on critical thresholds (Required)",
    "3. Customize dashboard layout and design for better user experience (Optional)",
    "4. Add additional panels for application-specific metrics (Optional)"
  ]
}